{
	// Place your snippets for go here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"fmt.Printf": {
		"prefix": "prif",
		"body": [
			"fmt.Printf(\"${1:%#v}\\n\", $0)"
		]
	},
	"fmt.Println": {
		"prefix": "priln",
		"body": [
			"fmt.Println(\"${1}\", $0)"
		]
	},
	"Append": {
		"prefix": "app",
		"body": [
			"$1 = append($1, $0)"
		]
	},
	"To-do": {
		"prefix": "todo",
		"body": [
			"// TODO: $0"
		]
	},
	"Struct Func": {
		"prefix": "sfunc",
		"body": [
			"// $3 ${4:implementation}.",
			"func ($1 *$2) $3($5) $6 {",
			"  $0",
			"}"
		]
	},
	"Make Chan": {
		"prefix": "mc",
		"body": [
			"make(chan ${0})"
		]
	},
	"If Error": {
		"prefix": "ifer",
		"body": [
			"if err != nil {",
			"  $0",
			"}"
		]
	},
	"Time Start": {
		"prefix": "timst",
		"body": [
			"start := time.Now()"
		]
	},
	"Time Since": {
		"prefix": "timsn",
		"body": [
			"time.Since(${0:start})"
		]
	},
	// DATA TYPES
	"Array of String": {
		"prefix": "sarr",
		"body": [
			"$0 [] string"
		]
	},
	"Struct": {
		"prefix": "str",
		"body": [
			"// $1 $2.",
			"type $1 struct {",
			"  $0",
			"}"
		]
	},
}